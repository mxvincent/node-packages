name: 'release'
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
env:
  HUSKY: 0
  KUBECONFIG: /tmp/kube-config
jobs:
  code-quality:
    uses: ./.github/workflows/code-quality.yaml
    secrets: inherit
  release:
    runs-on: ubuntu-latest
    needs:
      - code-quality
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
#      - name: Generate app access token
#        id: create-token
#        uses: actions/create-github-app-token@v1
#        with:
#          app-id: ${{ secrets.BOT_APP_ID }}
#          private-key: ${{ secrets.BOT_CLIENT_SECRET }}
      - name: 'Get release metadata'
        id: metadata
        uses: ./.github/actions/release-metadata
      - name: 'Setup NodeJS'
        uses: ./.github/actions/setup-node
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Run changeset action'
        id: changeset
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: scripts/changeset-publish.sh
          version: scripts/changeset-version.sh
          commit: ${{ steps.metadata.outputs.release-commit-title }}
          title: ${{ steps.metadata.outputs.release-commit-title }}
      - name: 'Dispatch docker build'
        id: docker-build-dispatch
        if: steps.changeset.outputs.published == 'true'
        uses: ./.github/actions/docker-build-dispatch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          applications-directory: ${{ github.workspace }}/applications
          published-packages: ${{ steps.changeset.outputs.publishedPackages }}